

Rt конфигурация
@@@@@@@@@@@@@@@

.. contents::
    :local:


.. _rt//app:

<app>
####################################################################################################################################################################################

*Узел:* ``app`` 

.. contents::
    :local:




.. _rt//app//title:

title="string"
************************************************************************************************************************************************************************************

*Атрибут:* ``app:title``, *тип:* ``string``

Заголовок приложения



.. _rt//app//titleShort:

titleShort="string"
************************************************************************************************************************************************************************************

*Атрибут:* ``app:titleShort``, *тип:* ``string``

Краткий заголовок приложения



.. _rt//web:

<web>
####################################################################################################################################################################################

*Узел:* ``web`` 

.. contents::
    :local:




.. _rt//web/theme:

<theme>
************************************************************************************************************************************************************************************

*Узел:* ``web/theme`` , *тип:* ``list``

.. contents::
    :local:

Конфигурация тем.

Пример:

.. code-block:: xml

    <root>
        <web>
            <theme>
                <mytheme parent="web/theme/base" jsclass="Jc.theme.Ide">
                    <item name="ext-all.css" path="/js/ext4/resources/css/ext-all-gray.css"/>
                </mytheme>
            </theme>
        </web>
    </root>


.. _rt//web/theme//default:

default="string"
====================================================================================================================================================================================

*Атрибут:* ``web/theme:default``, *тип:* ``string``

Имя темы по умолчанию.



.. _rt//web/theme/THEME-NAME:

<THEME-NAME>
====================================================================================================================================================================================

*Узел:* ``web/theme/THEME-NAME`` 

.. contents::
    :local:

Описание темы. Имя узла - имя темы


.. _rt//web/theme/THEME-NAME//jsclass:

jsclass="jsclass"
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

*Атрибут:* ``web/theme/THEME-NAME:jsclass``, *тип:* ``jsclass``

Имя js-класса с клиентской частью темы.



.. _rt//web/theme/THEME-NAME/item:

<item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

*Узел:* ``web/theme/THEME-NAME/item`` , *тип:* ``list``

.. contents::
    :local:

Список css/js/gsp, которые нужны для темы.
Каждый элемент может иметь дочерние item.


.. _rt//web/theme/THEME-NAME/item/ITEM-NAME:

<ITEM-NAME>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

*Узел:* ``web/theme/THEME-NAME/item/ITEM-NAME`` 

.. contents::
    :local:

css


.. _rt//web/theme/THEME-NAME/item/ITEM-NAME//path:

path="path"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

*Атрибут:* ``web/theme/THEME-NAME/item/ITEM-NAME:path``, *тип:* ``path``

Виртуальный путь до css/js/gsp файла



.. _rt//web/theme/THEME-NAME/item/ITEM-NAME//pathDebug:

pathDebug="path"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

*Атрибут:* ``web/theme/THEME-NAME/item/ITEM-NAME:pathDebug``, *тип:* ``path``

Виртуальный путь до css/js/gsp файла,
который нужно использовать вместо path в отладочном режиме



.. _rt//model:

<model>
####################################################################################################################################################################################

*Узел:* ``model`` 

.. contents::
    :local:




.. _rt//model/MODEL-NAME:

<MODEL-NAME>
************************************************************************************************************************************************************************************

*Узел:* ``model/MODEL-NAME`` 

.. contents::
    :local:




.. _rt//model/MODEL-NAME/field:

<field>
====================================================================================================================================================================================

*Узел:* ``model/MODEL-NAME/field`` 

.. contents::
    :local:




.. _rt//model/MODEL-NAME/field/FIELD-NAME:

<FIELD-NAME>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

*Узел:* ``model/MODEL-NAME/field/FIELD-NAME`` 

.. contents::
    :local:




.. _rt//model/MODEL-NAME/field/FIELD-NAME//visible:

visible="bool"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

*Атрибут:* ``model/MODEL-NAME/field/FIELD-NAME:visible``, *тип:* ``bool``

true - поле видимое для автогенерируемого интерфейса



.. _rt//model/MODEL-NAME/field/FIELD-NAME//editable:

editable="bool"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

*Атрибут:* ``model/MODEL-NAME/field/FIELD-NAME:editable``, *тип:* ``bool``

true - поле редактируемое для автогенерируемого интерфейса



.. _rt//model/MODEL-NAME/field/FIELD-NAME//weight:

weight="int"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

*Атрибут:* ``model/MODEL-NAME/field/FIELD-NAME:weight``, *тип:* ``int``

Вес поля (по умолчанию 50).
Когда структура домена отдается клиенту, все поля сортируются в
соотвествии с весом. Для полей с одинаковым весом, используется
сортировка по индексу. Манипулирую свойством поля ``weight``, можно
установить некоторый "порядок полей по умолчанию" для домена.



.. _rt//model/MODEL-NAME/field/FIELD-NAME/js:

<js>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

*Узел:* ``model/MODEL-NAME/field/FIELD-NAME/js`` 

.. contents::
    :local:

Все атрибуты и дочерние узлы отсюда наложатся на json, который описывает структуру
поля, передаваемую клиенту.
Пример:

.. code-block:: xml

    <root>
        <domain name="MyDomain" parent="id">
            <field name="field1" parent="long">
                <js title="Field1 Title">
                    <input jsclass="Cbdict" width="large"/>
                    <column jsclass="Dict"/>
                    <datalabel jsclass="Dict"/>
                </js>
            </field>
        </domain>
    </root>


.. _rt//model/MODEL-NAME/field/FIELD-NAME/js/column:

<column>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

*Узел:* ``model/MODEL-NAME/field/FIELD-NAME/js/column`` 

.. contents::
    :local:

Описание свойств колонки гриды для этого поля


.. _rt//model/MODEL-NAME/field/FIELD-NAME/js/column//jsclass:

jsclass="string"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

*Атрибут:* ``model/MODEL-NAME/field/FIELD-NAME/js/column:jsclass``, *тип:* ``string``

javascript класс колонки. Можно указывать как полное имя класса,
например ``Jc.column.String``, так и имя класса внутри пакета ``Jc.column``,
например ``String``.



.. _rt//model/MODEL-NAME/field/FIELD-NAME/js/input:

<input>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

*Узел:* ``model/MODEL-NAME/field/FIELD-NAME/js/input`` 

.. contents::
    :local:

Описание свойств поля ввода для этого поля


.. _rt//model/MODEL-NAME/field/FIELD-NAME/js/input//jsclass:

jsclass="string"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

*Атрибут:* ``model/MODEL-NAME/field/FIELD-NAME/js/input:jsclass``, *тип:* ``string``

javascript класс поля ввода. Можно указывать как полное имя класса,
например ``Jc.input.String``, так и имя класса внутри пакета ``Jc.input``,
например ``String``.



.. _rt//model/MODEL-NAME/field/FIELD-NAME/js/datalabel:

<datalabel>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

*Узел:* ``model/MODEL-NAME/field/FIELD-NAME/js/datalabel`` 

.. contents::
    :local:

Описание свойств метки с данными для этого поля


.. _rt//model/MODEL-NAME/field/FIELD-NAME/js/datalabel//jsclass:

jsclass="string"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

*Атрибут:* ``model/MODEL-NAME/field/FIELD-NAME/js/datalabel:jsclass``, *тип:* ``string``

javascript класс метки с данными. Можно указывать как полное имя класса,
например ``Jc.datalabel.String``, так и имя класса внутри пакета ``Jc.datalabel``,
например ``String``.



.. _rt//model/MODEL-NAME/domain:

<domain>
====================================================================================================================================================================================

*Узел:* ``model/MODEL-NAME/domain`` 

.. contents::
    :local:




.. _rt//model/MODEL-NAME/domain/DOMAIN-NAME:

<DOMAIN-NAME>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

*Узел:* ``model/MODEL-NAME/domain/DOMAIN-NAME`` 

.. contents::
    :local:




.. _rt//model/MODEL-NAME/domain/DOMAIN-NAME/js:

<js>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

*Узел:* ``model/MODEL-NAME/domain/DOMAIN-NAME/js`` 

.. contents::
    :local:

Все атрибуты и дочерние узлы отсюда наложатся на json, который описывает структуру
домена, передаваемую клиенту.
Пример:

.. code-block:: xml

    <root>
        <domain name="MyDomain" parent="id">
            <field name="field1" parent="long"/>

            <js title="MyDomain json title">
                <customData value1="1" value2="2"/>
            </js>
        </domain>
    </root>

